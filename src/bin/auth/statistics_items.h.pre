// Copyright (C) 2012  Internet Systems Consortium, Inc. ("ISC")
//
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
// AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
// INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
// LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
// OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.

#ifndef __STATISTICS_ITEMS_H
#define __STATISTICS_ITEMS_H 1

/// This file declares a set of statistics items in Auth module for internal
/// use. This file is intended to be included in statistics.cc and unittests.

namespace isc {
namespace auth {
namespace statistics {

struct CounterSpec {
    // item name: Name of this node. This appears in the spec file.
    const char* const name;
    // sub counters: If this is a branch node, sub_counters points to
    //               CounterSpec which contains child nodes. Otherwise, for
    //               leaf nodes, sub_counters is NULL.
    const struct CounterSpec* const sub_counters;
    // counter id: If this is a leaf node, counter_id is an enumerator of this
    //             item. Otherwise, for branch nodes, counter_id is NOT_ITEM.
    const int counter_id;
};

// ### STATISTICS ITEMS DECLARATION ###

extern const int opcode_to_msgcounter[];
extern const size_t num_opcode_to_msgcounter;
extern const int rcode_to_msgcounter[];
extern const size_t num_rcode_to_msgcounter;

} // namespace statistics
} // namespace auth
} // namespace isc

#endif // __STATISTICS_ITEMS_H

// Local Variables:
// mode: c++
// End:
