# Copyright (C) 2011  Internet Systems Consortium, Inc. ("ISC")
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

$PREFIX DATASRC_
$NAMESPACE isc::datasrc

# \brief Messages for the data source library

CACHE_CREAT Creating the hotspot cache
+ Debug information that the hotspot cache was created at startup.

CACHE_DESTROY Destroying the hotspot cache
+ Debug information. The hotspot cache is being destroyed.

CACHE_INSERT Inserting item '%s' into the cache
+ Debug information. It means a new item is being inserted into the hotspot
+ cache.

CACHE_OLD_FOUND Older instance of cache item found, replacing
+ Debug information. While inserting an item into the hotspot cache, an older
+ instance of an item with the same name was found. The old instance will be
+ removed. This should be directly followed by CACHE_REMOVE.

CACHE_FULL Cache is full, dropping oldest
+ Debug information. After inserting an item into the hotspot cache, the
+ maximum number of items was exceeded, so the least recently used item will
+ be dropped. This should be directly followed by CACHE_REMOVE.

CACHE_REMOVE Removing '%s' from the cache
+ Debug information. An item is being removed from the hotspot cache.

CACHE_LOOKUP Looking up '%s' in the cache
+ Debug information. We are trying to look up an item in the hotspot cache.
+ Further progress and result will follow.

CACHE_NOT_FOUND The item was not found
+ Debug information. The item we tried to look in the last CACHE_LOOKUP was
+ not found in the hotspot cache.

CACHE_FOUND The item was found
+ Debug information. The last CACHE_LOOKUP was successful, eg. we have found
+ the requested item in the hotspot cache.

CACHE_EXPIRED The item is expired
+ Debug information. The item requested in the last CACHE_LOOKUP was in the
+ hotspot cache, but it was old. We're going to remove it and report we don't
+ have it (the external result will be the same as with CACHE_NOT_FOUND).

CACHE_SLOTS Setting the cache size to '%d'
+ The maximum allowed number of items of the hotspot cache is set to the given
+ number. If there are too many, we're going to drop them right now. The size
+ of 0 means no limit.

CACHE_ENABLE Enabling the cache
+ The hotspot cache is enabled from now on.

CACHE_DISABLE Disabling the cache
+ The hotspot cache is disabled from now on. It is not going to store
+ information or return anything.

QUERY_SYNTH_CNAME Synthesizing CNAME from DNAME on '%s'
+ Debug info. While answering a query, we met a DNAME. We'll return the DNAME,
+ but we're creating a CNAME for clients that don't understand DNAMEs.

QUERY_EMPTY_DNAME The DNAME on '%s' is empty
+ We tried to synthesize a CNAME from this DNAME, but it contains no records.
+ This indicates problem with supplied data.

QUERY_GET_NS_ADDITIONAL Addition of A/AAAA for '%s' requested by NS '%s'
+ Debug information. While processing a query, we met a NS record. It
+ references the mentioned address, so we want to look up A/AAAA records for it
+ and put it into the additional section.

QUERY_GET_MX_ADDITIONAL Addition of A/AAAA for '%s' requested by MX '%s'
+ Debug information. While processing a query, we met a MX record. It
+ references the mentioned address, so we want to look up A/AAAA records for it
+ and put it into the additional section.

QUERY_FOLLOW_CNAME Following CNAME at '%s'
+ Debug information. The domain is a CNAME (or a DNAME and we created a CNAME
+ for it already), so we're following it.

QUERY_EMPTY_CNAME CNAME at '%s' is empty
+ We tried to follow a CNAME, but contains no records. We have nothing to
+ follow, so we will have nothing in the answer. This indicates a problem with
+ supplied data.

QUERY_TOO_MANY_CNAMES CNAME chain limit exceeded at '%s'
+ While answering a query, we followed a CNAME. Then another one. And after 16
+ CNAMEs we decided it's enough and we won't follow more. Long CNAME chains
+ are discouraged, and this might be a loop as well. Note that some of the
+ CNAMEs might have been synthesised from DNAMEs internally. This indicates
+ a problem with supplied data.
