# Copyright (C) 2011  Internet Systems Consortium, Inc. ("ISC")
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

$NAMESPACE isc::datasrc::memory

# \brief Messages for the data source memory library

% DATASRC_MEMORY_ANY_SUCCESS ANY query for '%1' successful
Debug information. The domain was found and an ANY type query is being answered
by providing everything found inside the domain.

% DATASRC_MEMORY_BAD_NSEC3_NAME NSEC3 record has a bad owner name '%1'
The software refuses to load NSEC3 records into a wildcard domain or
the owner name has two or more labels below the zone origin.
It isn't explicitly forbidden, but no sane zone wouldn have such names
for NSEC3.  BIND 9 also refuses NSEC3 at wildcard, so this behavior is
compatible with BIND 9.

% DATASRC_MEMORY_CHECK_ERROR post-load check of zone %1/%2 failed: %3
The zone was loaded into the data source successfully, but the content fails
basic sanity checks. See the message if you want to know what exactly is wrong
with the data. The data can not be used and previous version, if any, will be
preserved.

% DATASRC_MEMORY_CHECK_WARNING %1/%2: %3
The zone was loaded into the data source successfully, but there's some problem
with the content. The problem does not stop the new version from being used
(though there may be other problems that do, see DATASRC_MEMORY_CHECK_ERROR),
but it should still be checked and fixed. See the message to know what exactly
is wrong with the data.

% DATASRC_MEMORY_CNAME CNAME at the domain '%1'
Debug information. The requested domain is an alias to a different domain,
returning the CNAME instead.

% DATASRC_MEMORY_DELEG_FOUND delegation found at '%1'
Debug information. A delegation point was found above the requested record.

% DATASRC_MEMORY_DNAME_ENCOUNTERED encountered a DNAME
Debug information. While searching for the requested domain, a DNAME was
encountered on the way.  This may lead to redirection to a different domain and
stop the search.

% DATASRC_MEMORY_DNAME_FOUND DNAME found at '%1'
Debug information. A DNAME was found instead of the requested information.

% DATASRC_MEMORY_DOMAIN_EMPTY requested domain '%1' is empty
Debug information. The requested domain exists in the tree of domains, but
it is empty. Therefore it doesn't contain the requested resource type.

% DATASRC_MEMORY_EXACT_DELEGATION delegation at the exact domain '%1'
Debug information. There's a NS record at the requested domain. This means
this zone is not authoritative for the requested domain, but a delegation
should be followed. The requested domain is an apex of some zone.

% DATASRC_MEMORY_FINDNSEC3 finding NSEC3 for %1, mode %2
Debug information. A search in an in-memory data source for NSEC3 that
matches or covers the given name is being started.

% DATASRC_MEMORY_FINDNSEC3_COVER found a covering NSEC3 for %1: %2
Debug information. An NSEC3 that covers the given name is found and
being returned.  The found NSEC3 RRset is also displayed.

% DATASRC_MEMORY_FINDNSEC3_MATCH found a matching NSEC3 for %1 at label count %2: %3
Debug information. An NSEC3 that matches (a possibly superdomain of)
the given name is found and being returned.  When the shown label
count is smaller than that of the given name, the matching NSEC3 is
for a superdomain of the given name (see DATASRC_MEMORY_FINDNSEC3_TRYHASH).
The found NSEC3 RRset is also displayed.

% DATASRC_MEMORY_FINDNSEC3_TRYHASH looking for NSEC3 for %1 at label count %2 (hash %3)
Debug information. In an attempt of finding an NSEC3 for the give name,
(a possibly superdomain of) the name is hashed and searched for in the
NSEC3 name space.  When the shown label count is smaller than that of the
shown name, the search tries the superdomain name that share the shown
(higher) label count of the shown name (e.g., for
www.example.com. with shown label count of 3, example.com. is being
tried).

% DATASRC_MEMORY_FIND_TYPE_AT_ORIGIN origin query for type %1 in in-memory zone %2/%3 successful
Debug information.  A specific type RRset is requested at a zone origin
of an in-memory zone and it is found.

% DATASRC_MEMORY_MEM_ADD_EMPTY_ZONE adding an empty zone '%1/%2'
Debug information. An "empty" zone is being added into the in-memory
data source.  This is conceptual data indicating the state where the
zone exists but its content isn't available.  That would be the case,
for example, a broken zone specified in the configuration.

% DATASRC_MEMORY_MEM_ADD_RRSET adding RRset '%1/%2' into zone '%3'
Debug information. An RRset is being added to the in-memory data source.

% DATASRC_MEMORY_MEM_ADD_WILDCARD adding wildcards for '%1'
This is a debug message issued during the processing of a wildcard
name. The internal domain name tree is scanned and some nodes are
specially marked to allow the wildcard lookup to succeed.

% DATASRC_MEMORY_MEM_ADD_ZONE adding zone '%1/%2'
Debug information. A zone is being added into the in-memory data source.

% DATASRC_MEMORY_MEM_CNAME_COEXIST can't add data to CNAME in domain '%1'
This is the same problem as in MEM_CNAME_TO_NONEMPTY, but it happened the
other way around -- adding some other data to CNAME.

% DATASRC_MEMORY_MEM_CNAME_TO_NONEMPTY can't add CNAME to domain with other data in '%1'
Someone or something tried to add a CNAME into a domain that already contains
some other data. But the protocol forbids coexistence of CNAME with anything
(RFC 1034, section 3.6.2). This indicates a problem with provided data.

% DATASRC_MEMORY_MEM_DNAME_NS DNAME and NS can't coexist in non-apex domain '%1'
A request was made for DNAME and NS records to be put into the same
domain which is not the apex (the top of the zone). This is forbidden
by RFC 2672 (section 3) and indicates a problem with provided data.

% DATASRC_MEMORY_MEM_DUP_RRSET duplicate RRset '%1/%2'
An RRset is being inserted into in-memory data source for a second time.  The
original version must be removed first. Note that loading master files where an
RRset is split into multiple locations is not supported yet.

% DATASRC_MEMORY_MEM_FIND_ZONE looking for zone '%1'
Debug information. A zone object for this zone is being searched for in the
in-memory data source.

% DATASRC_MEMORY_MEM_LOAD_FROM_DATASRC loading zone '%1/%2' from other data source
Debug information. The content of another  data source is being loaded
into the memory.

% DATASRC_MEMORY_MEM_LOAD_FROM_FILE loading zone '%1/%2' from file '%3'
Debug information. The content of master file is being loaded into the memory.

% DATASRC_MEMORY_MEM_NO_NSEC3PARAM NSEC3PARAM is missing for NSEC3-signed zone %1/%2
The in-memory data source has loaded a zone signed with NSEC3 RRs,
but it doesn't have a NSEC3PARAM RR at the zone origin.  It's likely that
the zone is somehow broken, but this RR is not necessarily needed for
handling lookups with NSEC3 in this data source, so it accepts the given
content of the zone.  Nevertheless the administrator should look into
the integrity of the zone data.

% DATASRC_MEMORY_MEM_OUT_OF_ZONE domain '%1' doesn't belong to zone '%2'
It was attempted to add the domain into a zone that shouldn't have it
(eg. the domain is not subdomain of the zone origin). This indicates a
problem with provided data.

% DATASRC_MEMORY_MEM_SINGLETON trying to add multiple RRs for domain '%1' and type '%2'
Some resource types are singletons -- only one is allowed in a domain
(for example CNAME or SOA). This indicates a problem with provided data.

% DATASRC_MEMORY_MEM_WILDCARD_DNAME DNAME record in wildcard domain '%1'
The software refuses to load DNAME records into a wildcard domain.  It isn't
explicitly forbidden, but the protocol is ambiguous about how this should
behave and BIND 9 refuses that as well. Please describe your intention using
different tools.

% DATASRC_MEMORY_MEM_WILDCARD_NS NS record in wildcard domain '%1'
The software refuses to load NS records into a wildcard domain.  It isn't
explicitly forbidden, but the protocol is ambiguous about how this should
behave and BIND 9 refuses that as well. Please describe your intention using
different tools.

% DATASRC_MEMORY_NOT_FOUND requested domain '%1' not found
Debug information. The requested domain does not exist.

% DATASRC_MEMORY_NS_ENCOUNTERED encountered a NS
Debug information. While searching for the requested domain, a NS was
encountered on the way (a delegation). This may lead to stop of the search.

% DATASRC_MEMORY_SUCCESS query for '%1/%2' successful
Debug information. The requested record was found.

% DATASRC_MEMORY_SUPER_STOP stopped as '%1' is superdomain of a zone node, meaning it's empty
Debug information. The search stopped because the requested domain was
detected to be a superdomain of some existing node of zone (while there
was no exact match).  This means that the domain is an empty nonterminal,
therefore it is treated  as NXRRSET case (eg. the domain exists, but it
doesn't have the requested record type).

% DATASRC_MEMORY_WILDCARD_CANCEL wildcard match canceled for '%1'
Debug information. A domain above wildcard was reached, but there's something
below the requested domain. Therefore the wildcard doesn't apply here.  This
behaviour is specified by RFC 1034, section 4.3.3.
