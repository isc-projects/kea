SUBDIRS = cfgrpt . testutils tests
# DATA_DIR is the directory where to put PID files.
dhcp_data_dir = @runstatedir@/@PACKAGE@
AM_CPPFLAGS  = -I$(top_builddir)/src/lib -I$(top_srcdir)/src/lib
AM_CPPFLAGS += -DDATA_DIR="\"$(dhcp_data_dir)\""
log_file_dir = @localstatedir@/log/@PACKAGE@
AM_CPPFLAGS += -DLOGFILE_DIR="\"$(log_file_dir)\""

AM_CPPFLAGS += $(BOOST_INCLUDES)
AM_CXXFLAGS  = $(KEA_CXXFLAGS)

# Ensure that the message file is included in the distribution
EXTRA_DIST = process_messages.mes libprocess.dox

CLEANFILES = *.gcno *.gcda

# Generated by configure files
DISTCLEANFILES = spec_config.h.pre

lib_LTLIBRARIES = libkea-process.la
libkea_process_la_SOURCES  = cb_ctl_base.h
libkea_process_la_SOURCES += config_base.cc config_base.h
libkea_process_la_SOURCES += config_ctl_info.cc config_ctl_info.h
libkea_process_la_SOURCES += config_ctl_parser.cc config_ctl_parser.h
libkea_process_la_SOURCES += d_cfg_mgr.cc d_cfg_mgr.h
libkea_process_la_SOURCES += d_controller.cc d_controller.h
libkea_process_la_SOURCES += d_log.cc d_log.h
libkea_process_la_SOURCES += d_process.h
libkea_process_la_SOURCES += daemon.cc daemon.h
libkea_process_la_SOURCES += log_parser.cc log_parser.h
libkea_process_la_SOURCES += logging_info.cc logging_info.h
libkea_process_la_SOURCES += process_messages.cc process_messages.h
libkea_process_la_SOURCES += redact_config.cc redact_config.h

libkea_process_la_CXXFLAGS = $(AM_CXXFLAGS)
libkea_process_la_CPPFLAGS = $(AM_CPPFLAGS)
libkea_process_la_LDFLAGS  = $(AM_LDFLAGS)
libkea_process_la_LDFLAGS += -no-undefined -version-info 75:0:0

libkea_process_la_LIBADD  = $(top_builddir)/src/lib/process/cfgrpt/libcfgrpt.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/config/libkea-cfgclient.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/http/libkea-http.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/dhcp/libkea-dhcp++.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/hooks/libkea-hooks.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/database/libkea-database.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/cc/libkea-cc.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/asiolink/libkea-asiolink.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/log/libkea-log.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/util/libkea-util.la
libkea_process_la_LIBADD += $(top_builddir)/src/lib/exceptions/libkea-exceptions.la
libkea_process_la_LIBADD += $(LOG4CPLUS_LIBS) $(BOOST_LIBS)

# If we want to get rid of all generated messages files, we need to use
# make maintainer-clean. The proper way to introduce custom commands for
# that operation is to define maintainer-clean-local target. However,
# make maintainer-clean also removes Makefile, so running configure script
# is required.  To make it easy to rebuild messages without going through
# reconfigure, a new target messages-clean has been added.
maintainer-clean-local:
	rm -f process_messages.h process_messages.cc

# To regenerate messages files, one can do:
#
# make messages-clean
# make messages
#
# This is needed only when a .mes file is modified.
messages-clean: maintainer-clean-local

if GENERATE_MESSAGES

# Define rule to build logging source files from message file
messages: process_messages.h process_messages.cc
	@echo Message files regenerated

process_messages.h process_messages.cc: process_messages.mes
	$(top_builddir)/src/lib/log/compiler/kea-msg-compiler $(top_srcdir)/src/lib/process/process_messages.mes

else

messages process_messages.h process_messages.cc:
	@echo Messages generation disabled. Configure with --enable-generate-messages to enable it.

endif

# Specify the headers for copying into the installation directory tree.
libkea_process_includedir = $(pkgincludedir)/process
libkea_process_include_HEADERS = \
	cb_ctl_base.h \
	config_base.h \
	config_ctl_info.h \
	config_ctl_parser.h \
	daemon.h \
	d_cfg_mgr.h \
	d_controller.h \
	d_log.h \
	d_process.h \
	logging_info.h \
	log_parser.h \
	process_messages.h \
	redact_config.h
