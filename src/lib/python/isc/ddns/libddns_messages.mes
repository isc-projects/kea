# Copyright (C) 2012  Internet Systems Consortium, Inc. ("ISC")
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

# No namespace declaration - these constants go in the global namespace
# of the libddns_messages python module.

% LIBDDNS_UPDATE_ERROR update client %1 for zone %2: %3
Debug message.  An error is found in processing a dynamic update
request.  This log message is used for general errors that are not
normally expected to happen.  So, in general, it would mean some
problem in the client implementation or an interoperability issue
with this implementation.  The client's address, the zone name and
class, and description of the error are logged.

% LIBDDNS_UPDATE_FORWARD_FAIL update client %1 for zone %2: update forwarding not supported
Debug message.  An update request is sent to a secondary server.  This
is not necessarily invalid, but this implementation does not yet
support update forwarding as specified in Section 6 of RFC2136 and it
will simply return a response with an RCODE of NOTIMP to the client.
The client's address and the zone name/class are logged.

% LIBDDNS_UPDATE_NOTAUTH update client %1 for zone %2: not authoritative for update zone
Debug message.  An update request for a zone for which the receiving
server doesn't have authority.  In theory this is an unexpected event,
but there are client implementations that could send update requests
carelessly, so it may not necessarily be so uncommon in practice.  If
possible, you may want to check the implementation or configuration of
those clients to suppress the requests.  As specified in Section 3.1
of RFC2136, the receiving server will return a response with an RCODE
of NOTAUTH.

% LIBDDNS_UPDATE_REFUSED update client %1 for zone %2 denied
TBD
